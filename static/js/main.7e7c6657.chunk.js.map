{"version":3,"sources":["components/SearchMusicItem/index.js","components/SearchMusic/index.js","components/Header/index.js","components/Music/index.js","components/MusicList/index.js","components/InputMusic/index.js","components/Duration/index.js","components/NowPlaying/index.js","Routes/NowList/index.js","Routes/PlayList/index.js","Routes/Search/index.js","reducer/index.js","components/AppLayout.js","index.js"],"names":["SearchMusicItem","jacket","title","artist","id","getMovieInfo","setUrl","className","onClick","videoID","alert","src","url","alt","SearchMusic","useState","searchValue","setSearchValue","searchList","setSearchList","optionParams","q","part","key","process","type","maxResults","regionCode","videoDuration","encodeURI","searchUrl","option","substr","length","onSubmitSearch","e","a","preventDefault","axios","get","searchResult","console","log","data","status","items","onSubmit","value","onChange","target","map","item","videoId","snippet","thumbnails","default","channelTitle","dotenv","config","Header","openSearch","to","icon","faSearch","href","rel","faGithub","faBlog","faProductHunt","Music","musicList","deleteMusicList","isPlaying","setIsPlaying","nowPlayingMusic","setNowPlayingMusic","setCover","playingMusicIndex","findIndex","music","index","draggableId","String","provided","find","bigJacket","ref","innerRef","draggableProps","dragHandleProps","faPlay","faPause","singer","duration","faTimes","stopPropagation","MusicList","setMusicList","onDragEnd","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","droppableProps","placeholder","InputMusic","getMovieinfo","trim","includes","split","faPlus","Duration","seconds","dateTime","Math","round","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","format","string","slice","NowPlaying","mute","setMute","volume","setVolume","beforeVolume","setBeforeVolume","setDuration","played","setPlayed","player","useRef","handleNextPlay","onDuration","playing","onPlay","onProgress","state","step","minValue","maxValue","parseFloat","onChangeComplete","current","seekTo","handlePrevPlay","faBackward","faStepForward","faVolumeMute","faVolumeUp","faVolumeDown","min","max","NowList","cover","PlayList","Search","MusicListData","base","name","songName","videoKey","thumbnail","max_thumbnail","App","defaultMusicList","storageMusicList","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","addMusic","addMusicList","concat","APIURL","video","contentDetails","valueOf","youtubeDuration","maxres","standard","high","medium","error","selectedMusic","deleteMusic","filter","exact","path","render","props","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e7c6657.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchMusicItem = ({\r\n    jacket,\r\n    title,\r\n    artist,\r\n    id,\r\n    getMovieInfo,\r\n    setUrl,\r\n}) => {\r\n    const addSearchItem = (videoID) => {\r\n        alert(videoID);\r\n        getMovieInfo(videoID);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"search-music-item\"\r\n            onClick={() => {\r\n                addSearchItem(id);\r\n            }}\r\n        >\r\n            <p className=\"search-music-item--thumbnail\">\r\n                <img src={jacket.url} alt={title} />\r\n            </p>\r\n            <div className=\"search-music-item--info\">\r\n                <p className=\"search-music-item--info__title\">{title}</p>\r\n                <p className=\"search-music-item--info__artist\">{artist}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchMusicItem;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.scss\";\r\nimport SearchMusicItem from \"../SearchMusicItem\";\r\n\r\nconst SearchMusic = ({ getMovieInfo, setUrl }) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [searchList, setSearchList] = useState([]);\r\n    // const [trySearching, setTrySearching] = useState(false);\r\n\r\n    const optionParams = {\r\n        q: searchValue,\r\n        part: \"snippet\",\r\n        key: process.env.REACT_APP_APIKEY,\r\n        type: \"video\",\r\n        maxResults: 10,\r\n        regionCode: \"KR\",\r\n        videoDuration: \"short\",\r\n    };\r\n\r\n    //한글을 검색어로 전달하기 위해선 url encoding 필요!\r\n    optionParams.q = encodeURI(optionParams.q);\r\n\r\n    let searchUrl = \"https://www.googleapis.com/youtube/v3/search?\";\r\n    for (var option in optionParams) {\r\n        searchUrl += option + \"=\" + optionParams[option] + \"&\";\r\n    }\r\n\r\n    //searchUrl의마지막에 붙어있는 & 정리\r\n    searchUrl = searchUrl.substr(0, searchUrl.length - 1);\r\n\r\n    const onChangeSearch = (e) => {\r\n        setSearchValue(e.target.value);\r\n    };\r\n\r\n    const onSubmitSearch = async (e) => {\r\n        e.preventDefault();\r\n        if (searchValue === \"\") {\r\n            alert(\"검색값을 입력해주세요.\");\r\n            return;\r\n        }\r\n        try {\r\n            const searchResult = await axios.get(searchUrl);\r\n            console.log(searchResult.data);\r\n            // setTrySearching(true);\r\n            if (searchResult.status === 200) {\r\n                setSearchList(searchResult.data.items);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    };\r\n    console.log(searchList);\r\n\r\n    return (\r\n        <div className=\"search-area\">\r\n            <div className=\"search-area--search\">\r\n                <form onSubmit={onSubmitSearch}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchValue}\r\n                        onChange={onChangeSearch}\r\n                    />\r\n                    <button type=\"submit\">검색</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"search-area--result\">\r\n                {searchList.length !== 0 ? (\r\n                    searchList.map((item) => (\r\n                        <SearchMusicItem\r\n                            key={item.id.videoId}\r\n                            id={item.id.videoId}\r\n                            jacket={item.snippet.thumbnails.default}\r\n                            title={item.snippet.title}\r\n                            artist={item.snippet.channelTitle}\r\n                            getMovieInfo={getMovieInfo}\r\n                            setUrl={setUrl}\r\n                        />\r\n                    ))\r\n                ) : (\r\n                    <p className=\"nothing\">검색결과가 없습니다.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchMusic;\r\n","import React, { useState } from \"react\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { faGithub, faProductHunt } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faSearch, faBlog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"./style.scss\";\r\nimport SearchMusic from \"../SearchMusic\";\r\n\r\ndotenv.config();\r\n\r\nconst Header = ({ getMovieInfo, setUrl }) => {\r\n    const [openSearch, setOpenSearch] = useState(false);\r\n\r\n    return (\r\n        <header>\r\n            <h1 className=\"logo\">\r\n                <Link to=\"/youtube-music-player\">\r\n                    <img\r\n                        src=\"/youtube-music-player/images/logo.svg\"\r\n                        alt=\"로고\"\r\n                    />\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"menu\">\r\n                <ul>\r\n                    <li>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                // setOpenSearch(!openSearch);\r\n                                alert(\"준비중입니다.\");\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                            &nbsp; 검색하기\r\n                        </button>\r\n                        {openSearch && (\r\n                            <SearchMusic\r\n                                getMovieInfo={getMovieInfo}\r\n                                setUrl={setUrl}\r\n                            />\r\n                        )}\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"link-list\">\r\n                <a\r\n                    href=\"https://github.com/ddock4you/youtube-music-player\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                </a>\r\n                <a\r\n                    href=\"https://ddock4you.netlify.app/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <FontAwesomeIcon icon={faBlog} />\r\n                </a>\r\n                <a\r\n                    href=\"http://ddock4you.ivyro.net/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <FontAwesomeIcon icon={faProductHunt} />\r\n                </a>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { faPlay, faPause, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst Music = ({\r\n    musicList,\r\n    deleteMusicList,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    nowPlayingMusic,\r\n    setNowPlayingMusic,\r\n    setCover\r\n}) => {\r\n    const clickPlayMusic = key => {\r\n        setNowPlayingMusic(musicList.find(item => item.key === key));\r\n        setCover(musicList.find(item => item.key === key).bigJacket);\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    const playingMusicIndex = musicList.findIndex(\r\n        item => item.key === nowPlayingMusic.key\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {musicList.map((music, index) => (\r\n                <Draggable\r\n                    key={music.id}\r\n                    index={index}\r\n                    draggableId={String(music.id)}\r\n                >\r\n                    {provided => (\r\n                        <div\r\n                            className={\r\n                                \"music \" +\r\n                                (index === playingMusicIndex && isPlaying\r\n                                    ? \"playing\"\r\n                                    : index === playingMusicIndex && !isPlaying\r\n                                    ? \"stop\"\r\n                                    : \"\")\r\n                            }\r\n                            onClick={() => {\r\n                                clickPlayMusic(music.key);\r\n                            }}\r\n                            key={music.id}\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                        >\r\n                            <div className=\"music--jacket\">\r\n                                <p>\r\n                                    <img\r\n                                        src={music.bigJacket}\r\n                                        alt={music.title}\r\n                                    />\r\n                                    {isPlaying ? (\r\n                                        <FontAwesomeIcon icon={faPlay} />\r\n                                    ) : (\r\n                                        <FontAwesomeIcon icon={faPause} />\r\n                                    )}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"music--info\">\r\n                                <div className=\"music--info__title\">\r\n                                    {music.title}\r\n                                </div>\r\n                                <div className=\"music--info__singer\">\r\n                                    {music.singer}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"music--duration\">\r\n                                {music.duration}\r\n                            </div>\r\n                            <div className=\"music--remove\">\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    onClick={e => {\r\n                                        e.stopPropagation();\r\n                                        deleteMusicList(music.key);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Draggable>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport Music from \"../Music\";\r\nimport \"./style.scss\";\r\n\r\nconst MusicList = ({\r\n    musicList,\r\n    setMusicList,\r\n    deleteMusicList,\r\n    nowPlayingMusic,\r\n    setNowPlayingMusic,\r\n    setCover,\r\n    isPlaying,\r\n    setIsPlaying\r\n}) => {\r\n    const reorder = (list, startIndex, endIndex) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n\r\n    const onDragEnd = result => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        const items = reorder(\r\n            musicList,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n        setMusicList(items);\r\n    };\r\n\r\n    return (\r\n        <div className=\"music-list\">\r\n            <p className=\"music-list--title\">기본목록</p>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                    {provided => (\r\n                        <div\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                            className=\"music-list--area\"\r\n                        >\r\n                            <Music\r\n                                musicList={musicList}\r\n                                deleteMusicList={deleteMusicList}\r\n                                isPlaying={isPlaying}\r\n                                setIsPlaying={setIsPlaying}\r\n                                nowPlayingMusic={nowPlayingMusic}\r\n                                setNowPlayingMusic={setNowPlayingMusic}\r\n                                setCover={setCover}\r\n                            />\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MusicList;\r\n","import React from \"react\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InputMusic = ({ getMovieinfo, musicList, url, setUrl }) => {\r\n    const onChangeUrl = (e) => {\r\n        setUrl(e.target.value);\r\n    };\r\n\r\n    const inputUrl = (e) => {\r\n        e.preventDefault();\r\n        // console.log(url);\r\n        if (url.trim === \"\" && !url) {\r\n            alert(\"YouTube URL이나 Video ID를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        let videoID = \"\";\r\n        // youtube 메뉴 중 '동영상 URL 복사'를 통해 URL를 얻어서 입력했을 경우\r\n        if (url.includes(\"youtu.be\") === true) {\r\n            videoID = url.split(\"/\")[3].split(\"?\")[0];\r\n            // 일반 URL을 복사해서 입력했을 경우\r\n        } else if (url.includes(\"v=\") === false) {\r\n            videoID = url;\r\n        } else if (url.includes(\"v=\") === true) {\r\n            videoID = url.split(\"v=\")[1];\r\n        }\r\n\r\n        if (musicList.find((music) => music.key === videoID)) {\r\n            alert(\"이미 등록된 음악입니다.\");\r\n            return;\r\n        }\r\n\r\n        getMovieinfo(videoID);\r\n        setUrl(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"music-input\" onSubmit={inputUrl}>\r\n            <label>\r\n                <span>YouTube URL :</span>\r\n                <input type=\"text\" value={url} onChange={onChangeUrl} />\r\n            </label>\r\n            <button type=\"submit\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default InputMusic;\r\n","import React from \"react\";\r\n\r\nexport default function Duration({ className, seconds }) {\r\n    return (\r\n        <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n            {format(seconds)}\r\n        </time>\r\n    );\r\n}\r\n\r\nfunction format(seconds) {\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = pad(date.getUTCSeconds());\r\n    if (hh) {\r\n        return `${hh}:${pad(mm)}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n}\r\n\r\nfunction pad(string) {\r\n    return (\"0\" + string).slice(-2);\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport YouTube from \"react-player\";\r\nimport {\r\n    faStepForward,\r\n    faBackward,\r\n    faPlay,\r\n    faPause,\r\n    faVolumeMute,\r\n    faVolumeUp,\r\n    faVolumeDown\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport InputRange from \"react-input-range\";\r\nimport \"react-input-range/lib/css/index.css\";\r\n\r\nimport Duration from \"../Duration\";\r\nimport \"./style.scss\";\r\n\r\nconst NowPlaying = ({\r\n    nowPlayingMusic,\r\n    setNowPlayingMusic,\r\n    musicList,\r\n    setCover,\r\n    isPlaying,\r\n    setIsPlaying\r\n}) => {\r\n    const [mute, setMute] = useState(false);\r\n    const [volume, setVolume] = useState(0.5);\r\n    const [beforeVolume, setBeforeVolume] = useState(null);\r\n    const [duration, setDuration] = useState(0);\r\n    const [played, setPlayed] = useState(0);\r\n    const handleDuration = duration => {\r\n        // console.log(\"onDuration\", duration);\r\n        setDuration(duration);\r\n    };\r\n\r\n    const player = useRef();\r\n\r\n    const handlePlayMusic = () => {\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n\r\n    const handlePlay = () => {};\r\n\r\n    const handleProgress = state => {\r\n        // console.log(\"onProgress\", state.played);\r\n        setPlayed(state.played);\r\n        if (state.played === 1) {\r\n            handleNextPlay(playingMusicIndex);\r\n        }\r\n    };\r\n\r\n    const playingMusicIndex = musicList.findIndex(\r\n        item => item.key === nowPlayingMusic.key\r\n    );\r\n\r\n    const handleNextPlay = index => {\r\n        if (index + 1 === musicList.length) {\r\n            setIsPlaying(false);\r\n            alert(\"끝 부분입니다.\");\r\n            return;\r\n        }\r\n        setCover(musicList[index + 1].bigJacket);\r\n        setNowPlayingMusic(musicList[index + 1]);\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    const handlePrevPlay = index => {\r\n        if (index - 1 === -1) {\r\n            setIsPlaying(false);\r\n            alert(\"처음 시작되는 부분입니다.\");\r\n            return;\r\n        }\r\n        setCover(musicList[index - 1].bigJacket);\r\n        setNowPlayingMusic(musicList[index - 1]);\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    const handleVolumeChange = e => {\r\n        setVolume(e.target.value);\r\n        if (e.target.value === \"0\") {\r\n            setMute(true);\r\n        } else {\r\n            setMute(false);\r\n        }\r\n    };\r\n\r\n    const handleMute = () => {\r\n        if (mute === false) {\r\n            setMute(!mute);\r\n            setBeforeVolume(volume);\r\n            setVolume(0);\r\n        } else {\r\n            setMute(!mute);\r\n            setVolume(beforeVolume);\r\n        }\r\n    };\r\n\r\n    const handleSeekChange = value => {\r\n        setPlayed(parseFloat(value));\r\n    };\r\n\r\n    const handleSeekMouseUp = value => {\r\n        // this.setState({ seeking: false })\r\n        player.current.seekTo(parseFloat(value));\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nowplaying\">\r\n            <YouTube\r\n                className=\"hidden\"\r\n                url={`https://www.youtube.com/watch?v=${nowPlayingMusic.key}`}\r\n                volume={mute ? 0 : volume}\r\n                onDuration={handleDuration}\r\n                playing={isPlaying}\r\n                ref={player}\r\n                onPlay={handlePlay}\r\n                onProgress={handleProgress}\r\n            />\r\n            <div className=\"duration--bar\">\r\n                {/* <input\r\n                    type=\"range\"\r\n                    min={0}\r\n                    max={0.99999}\r\n                    step=\"any\"\r\n                    value={played}\r\n                    onChange={handleSeekChange}\r\n                    onMouseUp={handleSeekMouseUp}\r\n                /> */}\r\n                <InputRange\r\n                    step={0.000001}\r\n                    minValue={0}\r\n                    maxValue={0.999999}\r\n                    value={played}\r\n                    onChange={handleSeekChange}\r\n                    onChangeComplete={handleSeekMouseUp}\r\n                />\r\n            </div>\r\n            <div className=\"nowplaying--left-control\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                        handlePrevPlay(playingMusicIndex);\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faBackward} />\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"center\"\r\n                    onClick={handlePlayMusic}\r\n                >\r\n                    <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                        handleNextPlay(playingMusicIndex);\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faStepForward} />\r\n                </button>\r\n                <p className=\"nowplaying-content--duration\">\r\n                    <Duration seconds={duration * played} /> /{\" \"}\r\n                    <Duration seconds={duration} />\r\n                </p>\r\n            </div>\r\n            <div className=\"nowplaying-content\">\r\n                <p className=\"nowplaying-content--thumbnail\">\r\n                    <img\r\n                        src={nowPlayingMusic.bigJacket}\r\n                        alt={nowPlayingMusic.title}\r\n                    />\r\n                </p>\r\n                <div className=\"nowplaying-content--info\">\r\n                    <p className=\"nowplaying-content--info__title\">\r\n                        {nowPlayingMusic.title}\r\n                    </p>\r\n                    <p className=\"nowplaying-content--info__artist\">\r\n                        {nowPlayingMusic.singer}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"nowplaying--right-control\">\r\n                <button type=\"button\" className=\"volume\" onClick={handleMute}>\r\n                    <FontAwesomeIcon\r\n                        icon={\r\n                            mute\r\n                                ? faVolumeMute\r\n                                : volume >= 0.5\r\n                                ? faVolumeUp\r\n                                : faVolumeDown\r\n                        }\r\n                    />\r\n                </button>\r\n                <input\r\n                    type=\"range\"\r\n                    min={0}\r\n                    max={1}\r\n                    step=\"0.1\"\r\n                    value={volume}\r\n                    onChange={handleVolumeChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NowPlaying;\r\n","import React from \"react\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport MusicList from \"../../components/MusicList\";\r\nimport InputMusic from \"../../components/InputMusic\";\r\nimport \"./style.scss\";\r\nimport NowPlaying from \"../../components/NowPlaying\";\r\n\r\ndotenv.config();\r\n\r\nconst NowList = ({\r\n    getMovieInfo,\r\n    musicList,\r\n    setMusicList,\r\n    deleteMusicList,\r\n    nowPlayingMusic,\r\n    setNowPlayingMusic,\r\n    cover,\r\n    setCover,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    url,\r\n    setUrl,\r\n}) => {\r\n    return (\r\n        <div className={`now-list`}>\r\n            <div className=\"cover\">\r\n                <div className=\"cover-img\">\r\n                    <img src={cover} alt={`${cover} cover`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"music-content\">\r\n                <InputMusic\r\n                    getMovieinfo={getMovieInfo}\r\n                    musicList={musicList}\r\n                    url={url}\r\n                    setUrl={setUrl}\r\n                    // onChangeUrl={onChangeUrl}\r\n                />\r\n                <MusicList\r\n                    musicList={musicList}\r\n                    setMusicList={setMusicList}\r\n                    deleteMusicList={deleteMusicList}\r\n                    nowPlayingMusic={nowPlayingMusic}\r\n                    setNowPlayingMusic={setNowPlayingMusic}\r\n                    setCover={setCover}\r\n                    isPlaying={isPlaying}\r\n                    setIsPlaying={setIsPlaying}\r\n                />\r\n            </div>\r\n            <NowPlaying\r\n                nowPlayingMusic={nowPlayingMusic}\r\n                setNowPlayingMusic={setNowPlayingMusic}\r\n                musicList={musicList}\r\n                setCover={setCover}\r\n                isPlaying={isPlaying}\r\n                setIsPlaying={setIsPlaying}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NowList;\r\n","import React from \"react\";\r\n// import { fake } from \"../../fake\";\r\n\r\nconst PlayList = ({ musicList }) => {\r\n    return <div className=\"playlist\"></div>;\r\n};\r\n\r\nexport default PlayList;\r\n","import React from \"react\";\r\n\r\nconst Search = () => {\r\n    return <div>SearchList</div>;\r\n};\r\n\r\nexport default Search;\r\n","export const MusicListData = [\r\n    {\r\n        base: {\r\n            name: \"기본\",\r\n            list: [\r\n                {\r\n                    id: 1585749814658,\r\n                    title: \"dokiwa. (from dosii) - 샴푸의 요정\",\r\n                    singer: \"Mellowbeat Seeker\",\r\n                    key: \"_XSVrRK205Q\",\r\n                    jacket: \"https://i.ytimg.com/vi/_XSVrRK205Q/default.jpg\",\r\n                    bigJacket:\r\n                        \"https://i.ytimg.com/vi/_XSVrRK205Q/maxresdefault.jpg\",\r\n                    duration: \"03:31\"\r\n                },\r\n                {\r\n                    id: 1585749885524,\r\n                    title: \"roon - 추억 속 너에게 (Prod. KARXHE)\",\r\n                    singer: \"Mellowbeat Seeker\",\r\n                    key: \"wJuNJS9_b7A\",\r\n                    jacket: \"https://i.ytimg.com/vi/wJuNJS9_b7A/default.jpg\",\r\n                    bigJacket:\r\n                        \"https://i.ytimg.com/vi/wJuNJS9_b7A/maxresdefault.jpg\",\r\n                    duration: \"03:08\"\r\n                },\r\n                {\r\n                    id: 1585749892614,\r\n                    title: \"민민(minmin) - 차근차근(Slowly)\",\r\n                    singer: \"Mellowbeat Seeker\",\r\n                    key: \"4zAZfAukW8g\",\r\n                    jacket: \"https://i.ytimg.com/vi/4zAZfAukW8g/default.jpg\",\r\n                    bigJacket:\r\n                        \"https://i.ytimg.com/vi/4zAZfAukW8g/maxresdefault.jpg\",\r\n                    duration: \"03:01\"\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    {\r\n        base: {\r\n            name: \"커스텀 리스트\",\r\n            list: [\r\n                {\r\n                    id: 0,\r\n                    songName:\r\n                        \"We Can't Stop - Miley Cyrus (Boyce Avenue feat. Bea Miller cover) on Spotify & Apple\",\r\n                    singer: \"Boyce Avenue\",\r\n                    videoKey: \"uzgp65UnPxA\",\r\n                    thumbnail:\r\n                        \"https://i.ytimg.com/vi/uzgp65UnPxA/maxresdefault.jpg\",\r\n                    max_thumbnail:\r\n                        \"https://i.ytimg.com/vi/uzgp65UnPxA/maxresdefault.jpg\",\r\n                    duration: \"04:30\"\r\n                },\r\n                {\r\n                    id: 1,\r\n                    songName: \"Charlie Puth - Attention [Official Video]\",\r\n                    singer: \"Charlie Puth\",\r\n                    videoKey: \"nfs8NYg7yQM\",\r\n                    thumbnail:\r\n                        \"https://i.ytimg.com/vi/nfs8NYg7yQM/hqdefault.jpg\",\r\n                    max_thumbnail:\r\n                        \"https://i.ytimg.com/vi/nfs8NYg7yQM/hqdefault.jpg\",\r\n                    duration: \"03:52\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    songName:\r\n                        \"Pharrell Williams - Happy (Official Music Video)\",\r\n                    singer: \"PharrellWilliamsVEVO\",\r\n                    videoKey: \"ZbZSe6N_BXs\",\r\n                    thumbnail:\r\n                        \"https://i.ytimg.com/vi/ZbZSe6N_BXs/maxresdefault.jpg\",\r\n                    max_thumbnail:\r\n                        \"https://i.ytimg.com/vi/ZbZSe6N_BXs/maxresdefault.jpg\",\r\n                    duration: \"04:01\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    songName:\r\n                        \"We Can't Stop - Miley Cyrus (Boyce Avenue feat. Bea Miller cover) on Spotify & Apple\",\r\n                    singer: \"Boyce Avenue\",\r\n                    videoKey: \"uzgp65UnPxA\",\r\n                    thumbnail:\r\n                        \"https://i.ytimg.com/vi/uzgp65UnPxA/maxresdefault.jpg\",\r\n                    max_thumbnail:\r\n                        \"https://i.ytimg.com/vi/uzgp65UnPxA/maxresdefault.jpg\",\r\n                    duration: \"04:30\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport \"../scss/reset.scss\";\r\nimport Header from \"./Header\";\r\nimport NowList from \"../Routes/NowList\";\r\nimport PlayList from \"../Routes/PlayList\";\r\nimport Search from \"../Routes/Search\";\r\nimport axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport { MusicListData } from \"../reducer\";\r\nimport youtubeDuration from \"youtube-duration-format\";\r\n\r\ndotenv.config();\r\nfunction App() {\r\n    const defaultMusicList = MusicListData[0].base.list;\r\n    const storageMusicList = localStorage.getItem(\"localPlayList\")\r\n        ? JSON.parse(localStorage.getItem(\"localPlayList\"))\r\n        : defaultMusicList;\r\n    const [musicList, setMusicList] = useState(storageMusicList);\r\n    const [nowPlayingMusic, setNowPlayingMusic] = useState(musicList[0]);\r\n    const [cover, setCover] = useState(musicList[0].bigJacket);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"localPlayList\", JSON.stringify(musicList));\r\n    }, [musicList]);\r\n\r\n    const addMusic = (music) => {\r\n        let addMusicList = musicList.concat(music);\r\n        setMusicList(addMusicList);\r\n        console.log(musicList);\r\n    };\r\n    console.log(url);\r\n\r\n    const getMovieInfo = async (videoId) => {\r\n        try {\r\n            const APIKEY = process.env.REACT_APP_APIKEY;\r\n            const APIURL = `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${APIKEY}&part=snippet,contentDetails,statistics,status`;\r\n            const video = await axios.get(APIURL);\r\n            console.log(video);\r\n            if (video.status === 200 && video.data.items.length >= 1) {\r\n                const music = {\r\n                    id: \"\",\r\n                    title: \"\",\r\n                    singer: \"\",\r\n                    key: \"\",\r\n                    jacket: \"\",\r\n                    bigJacket: \"\",\r\n                    duration: \"\",\r\n                };\r\n\r\n                const { id } = video.data.items[0];\r\n                const { snippet } = video.data.items[0];\r\n                const { contentDetails } = video.data.items[0];\r\n                const { thumbnails } = snippet;\r\n\r\n                music.title = snippet.title;\r\n                music.singer = snippet.channelTitle;\r\n                music.key = id;\r\n                music.id = new Date().valueOf();\r\n                music.duration = youtubeDuration(contentDetails.duration);\r\n                music.jacket = thumbnails.default.url;\r\n                music.bigJacket = thumbnails.maxres\r\n                    ? thumbnails.maxres.url\r\n                    : thumbnails.standard\r\n                    ? thumbnails.standard.url\r\n                    : thumbnails.high\r\n                    ? thumbnails.high.url\r\n                    : thumbnails.medium\r\n                    ? thumbnails.medium.url\r\n                    : thumbnails.default.url;\r\n\r\n                console.log(musicList);\r\n\r\n                return addMusic(music);\r\n            }\r\n            // return console.log(video);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    const deleteMusicList = (selectedMusic) => {\r\n        if (musicList.length === 1) {\r\n            alert(\"플레이리스트에 최소 하나 이상의 음악이 있어야 합니다.\");\r\n            return;\r\n        }\r\n        const deleteMusic = musicList.filter(\r\n            (music) => music.key !== selectedMusic\r\n        );\r\n        setMusicList(deleteMusic);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Header getMovieInfo={getMovieInfo} setUrl={setUrl} />\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path=\"/\"\r\n                    render={(props) => (\r\n                        <NowList\r\n                            getMovieInfo={getMovieInfo}\r\n                            musicList={musicList}\r\n                            setMusicList={setMusicList}\r\n                            deleteMusicList={deleteMusicList}\r\n                            nowPlayingMusic={nowPlayingMusic}\r\n                            setNowPlayingMusic={setNowPlayingMusic}\r\n                            cover={cover}\r\n                            setCover={setCover}\r\n                            isPlaying={isPlaying}\r\n                            setIsPlaying={setIsPlaying}\r\n                            url={url}\r\n                            setUrl={setUrl}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route exact path=\"/playlist\" component={PlayList} />\r\n                <Route exact path=\"/search\" component={Search} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./scss/reset.scss\";\r\nimport App from \"./components/AppLayout\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}